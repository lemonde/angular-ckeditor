!function(a,b){"function"==typeof define&&define.amd?define(["angular"],b):b(angular)}(this,function(a){function b(a){return{restrict:"A",require:["ckeditor","ngModel"],controller:["$scope","$element","$attrs","$parse","$q",c],link:function(b,c,d,e){var f=e[0],g=e[1];f.ready().then(function(){["dataReady","change","blur","saveSnapshot"].forEach(function(a){f.onCKEvent(a,function(){g.$setViewValue(f.instance.getData()||"")})}),f.instance.setReadOnly(!!d.readonly),d.$observe("readonly",function(a){f.instance.setReadOnly(!!a)}),b.$evalAsync(function(){a(d.ready)(b,{editor:f.instance})})}),g.$render=function(){f.ready().then(function(){f.instance.setData(g.$viewValue||"")})}}}}function c(a,b,c,d,e){var f,g=d(c.ckeditor)(a)||{},h=b[0],i=e.defer();f=h.hasAttribute("contenteditable")&&"true"==h.getAttribute("contenteditable").toLowerCase()?this.instance=CKEDITOR.inline(h,g):this.instance=CKEDITOR.replace(h,g),this.onCKEvent=function(b,c){function d(){var a=arguments;e.apply(null,a)}function e(){var b=arguments;a.$evalAsync(function(){c.apply(null,b)})}return f.on(b,d),function(){f.removeListener(b,e)}},this.onCKEvent("instanceReady",function(){i.resolve(!0)}),this.ready=function(){return i.promise},a.$on("$destroy",function(){i.promise.then(function(){f.destroy(!1)})})}a.module("ckeditor",[]).directive("ckeditor",["$parse",b])});
//# sourceMappingURL=angular-ckeditor.min.map